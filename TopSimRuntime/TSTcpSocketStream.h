#ifndef __TSSPACEGRIDSPEC_55376141_2987_4743_9F15_B7CDBB0237AB_H__
#define __TSSPACEGRIDSPEC_55376141_2987_4743_9F15_B7CDBB0237AB_H__

#include "TopSimDataInterface.h"

#if defined(XSIM3_3) || defined(XSIM3_2)

#include <TopSimTypes/TopSimTypes.h>

typedef TSUnorderedSet<int> TSSpaceCellIdSet;
typedef std::vector<int> TSSpaceCellIdArray;

CLASS_PTR_DECLARE(TSISpatialObject);
CLASS_PTR_DECLARE(TSIObjectSpaceCellSpec);

class TOPSIMDATAINTERFACE_DECL TSIObjectSpaceCellSpec
{
public:
	virtual ~TSIObjectSpaceCellSpec(){};
	virtual void SetCell(int CellId)=0;
	virtual int GetCell()=0;
	virtual void SetSlot(std::size_t Slot)=0;
	virtual std::size_t GetSlot()=0;
};

class TOPSIMDATAINTERFACE_DECL TSISpatialObject
{
	friend class TSSpaceGridSpec;

	TS_MetaType(TSISpatialObject,TSNullClass);
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取空间对象句柄 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/10. </remarks>
	///
	/// <returns>	空间对象句柄 </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual UINT64 Handle()=0;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取空间对象ECEF位置 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/10. </remarks>
	///
	/// <returns>	ECEF位置 </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual TSVector3d Position()=0;

protected:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取空间对象网格定义 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/10. </remarks>
	///
	/// <returns>	网格定义 </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual TSIObjectSpaceCellSpecPtr GetObjectSpaceCellSpec()=0;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	设置空间对象网格定义 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/10. </remarks>
	///
	/// <param name="ObjectSpaceCellSpec">	网格定义 </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual void SetObjectSpaceCellSpec(TSIObjectSpaceCellSpecPtr  ObjectSpaceCellSpec)=0;
};

struct TSSpaceGridSpecPrivate;

class TOPSIMDATAINTERFACE_DECL TSSpaceGridSpec 
	: public TSObject
{
	TS_MetaType(TSSpaceGridSpec,TSObject);
private:
	typedef TSSpaceGridSpecPrivate PrivateType;
	PrivateType * _Private_Ptr;
	PrivateType * GetPP() const {return _Private_Ptr;}
public:
	TSSpaceGridSpec();
	virtual ~TSSpaceGridSpec();
protected:
	TSSpaceGridSpec(PrivateType * p);
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取北纬 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <returns>	北纬，单位：弧度  </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	DOUBLE GetNorthLat() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	设置北纬 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <param name="NorthLat">	北纬，单位：弧度  </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetNorthLat(DOUBLE  NorthLat);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取南纬 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <returns>	南纬，单位：弧度  </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	DOUBLE GetSouthLat() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	设置南纬 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <param name="SouthLat">	南纬，单位：弧度  </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetSouthLat(DOUBLE  SouthLat);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取东经 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <returns>	东经，单位：弧度  </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	DOUBLE GetEastLon() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	设置东经 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <param name="EastLon">	东经，单位：弧度  </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetEastLon(DOUBLE  EastLon);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取西经 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <returns>	西经，单位：弧度  </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	DOUBLE GetWestLon() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	设置西经 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <param name="WestLon">	西经，单位：弧度  </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetWestLon(DOUBLE  WestLon);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取纵向网格数量 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <returns>	纵向网格数量 </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	UINT16 GetNumberOfRows() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	设置纵向网格数量 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <param name="NumberOfRows">	纵向网格数量 </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetNumberOfRows(UINT16  NumberOfRows);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取横向网格数量 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <returns>	横向网格数量 </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	UINT16 GetNumberOfColumns() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	设置横向网格数量 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <param name="NumberOfColumns">	横向网格数量 </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void SetNumberOfColumns(UINT16  NumberOfColumns);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取区间经度跨度 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/10. </remarks>
	///
	/// <returns>	经度，单位：弧度 </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	DOUBLE GetLonScale() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取区间纬度跨度. </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/10. </remarks>
	///
	/// <returns>	纬度，单位：弧度.  </returns>
	///
	////////////////////////////////////////////////////////////////////////////////////////////////////

	DOUBLE GetLatScale() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取区间纬度区间跨度距离 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/10. </remarks>
	///
	/// <returns>	区间纬度区间跨度距离，单位：米. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	DOUBLE GetLatDistance() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取区间经度跨度距离. </summary>
	///
	/// <remarks>	不同的纬度带，经度之间距离不等, Huaru Infrastructure Team, 2015/9/10. </remarks>
	///
	/// <param name="LatHash">	维度hash </param>
	///
	/// <returns>	区间经度跨度距离，单位：米. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	DOUBLE GetLonDistance(int LatHash) const;
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	初始化空间网格 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <returns>	成功初始化返回true，否则返回false。 </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual bool Initialize();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	更新对象网格. </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <param name="BSE">		   对象指针. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual void UpdateObjectCell(TSISpatialObjectPtr SpatialObject);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	纬度hash计算 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <param name="dblLatitude">	纬度，单位：弧度。 </param>
	///
	/// <returns> 纬度hash计算 </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	int HashLatitude(DOUBLE dblLatitude);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	经度hash计算 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <param name="dblLongitude">	经度，单位：弧度。 </param>
	///
	/// <returns>	经度hash </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	int HashLongitude(DOUBLE dblLongitude);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	根据位置获得索引格序号 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/9. </remarks>
	///
	/// <param name="dblLatitude"> 	纬度，单位：弧度。 </param>
	/// <param name="dblLongitude">	经度，单位：弧度。 </param>
	///
	/// <returns>	网格序号 </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	int GetCellIndex(DOUBLE dblLatitude,DOUBLE dblLongitude);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	获取指定网格的下一个对象句柄. </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/14. </remarks>
	///
	/// <param name="CellId">  	网格编号. </param>
	/// <param name="NextSlot">	输入/输出下一个对象句柄槽. </param>
	///
	/// <returns>	返回下一个对象句柄。 </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	UINT64 GetCellNextObject( int CellId,std::size_t & NextSlot );

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	清理 </summary>
	///
	/// <remarks>	Huaru Infrastructure Team, 2015/9/10. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void Cleanup();
protected:
	void SetObjectEntryCell(TSISpatialObjectPtr SpatialObject,TSIObjectSpaceCellSpecPtr ObjectSpaceCellSpec);
	TSIObjectSpaceCellSpecPtr GetObjectEntryCell(TSISpatialObjectPtr SpatialObject);
};
typedef boost::shared_ptr<TSSpaceGridSpec> TSSpaceGridSpecPtr;

#endif


#endif // __TSSPACEGRIDSPEC_55376141_2987_4743_9F15_B7CDBB0237AB_H__

